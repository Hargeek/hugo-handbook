{"./":{"url":"./","title":"前言","keywords":"","body":"静态网站构建手册-使用Hugo构建个人博客 本手册将指导你如何使用Hugo构建静态网站用于个人博客或者项目展示。 手把手教你如何从0开始构建一个静态网站，这不需要有太多的编程和开发经验和时间投入，也基本不需要多少成本（除了个性化域名），使用GitHub和Hugo模板即可快速构建和上线一个网站。 Github地址：https://github.com/rootsongjc/hugo-handbook 目标读者 本文档适用于以下用户： 对网站构建不太了解，没有web开发经验的用户 希望快速构建一个网站，个性化需求不多，不想花费太多精力打理，更新不多的用户 希望学习网站构建、网站模板、web开发的用户 对Go语言感兴趣，希望从事开源项目的用户&#x1F44F; 致谢 Algolia Cloudinary Cloudflare GitHub pages Hugo Namecheap Steve Francia 七牛云存储 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-16 23:46:01 "},"concepts/principle.html":{"url":"concepts/principle.html","title":"静态网站构建原理","keywords":"","body":"静态网站构建原理 世界上的网站上千万，网页数量更是如天上的星星数也数不清。那么这些网站都是如何构建的？都包括哪些类型呢？笼统的概括世界上的网站分为两种类型： 静态网站：仅提供展示功能，不能与用户交互，不需要后端数据库存储用户信息 交互式网站：需要与用户交互，保存用户信息 大多数现代Web应用程序使用层叠样式表（CSS）、JavaScript、图片甚至是特殊的字体和字形库，如Awesome字体，这也是我们工具箱中最常用的库之一。 几乎所有的网站中都会包含一个静态文件目录 static，这个目录下包含三个目录，分别保存着三类文件： js：Javascript images：图片 css：层叠样式表和字体 我们不会为每个网站分别导入不同的样式信息，而是使用模板来生成网页的不同部分。 我们在下一章中将分别介绍三款流行的静态网站生成工具。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-05 11:01:45 "},"tools/intro.html":{"url":"tools/intro.html","title":"静态网站构建工具简介","keywords":"","body":"静态网站构建工具简介 使用静态网站构建工具不但可以让我们构建静态网站的工作大大简化，而且还可以迅速验证自己的想法，以最高效的方式开发网站。 这一章中将分别介绍三款流行的开源静态网站构建工具，然后说明为什么我们选择使用Hugo来构建静态网站。 对比 下面是三款静态网站构建工具的简要对比： 工具名称 开发语言 构建效率 典型用例 特点 jekyll ruby 比较慢 GitHub Pages默认的静态网站构建工具、kubernetes官网 历史悠久，开源已9年，模板和插件众多，但是构建速度慢 hexo node.js 一般 个人博客、产品展示 页面酷炫，前端开发者用户居多 hugo go 极快 个人博客、产品展示 Go大神spf13开发，开源已4年，升级活跃，构建速度极快，后端开发者用户居多 以上工具都可以将markdown内容转换为静态页面。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-05 11:34:29 "},"tools/jekyll.html":{"url":"tools/jekyll.html","title":"Jekyll简介","keywords":"","body":"Jekyll 简介 Jekyll 是最早开始流行的静态网站构建工具，使用Ruby语言开发，开源已有9个年头了，是Github Pages默认的静态网站构建工具。当前互联网上有大量基于jekyll构建的静态网站，包括现在流行的开源容器编排调度引擎kubernetes的官网。 Jekyll的理念 Jekyll网站构建的理念就是只做用户告诉它要做的事情，不多也不少： No Magic：简单易懂 It “Just Works”：初始化网站配置，不需要为让用户操心 Content is King：内容为王，这是用于应该真正关心的部分 Stability：向后兼容，容易维护 Small & Extensible：核心功能满足90%用户的需求，其它功能使用插件形式，易于集成 以上理念也被后来出现的其它静态网站构建工具所传承。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-05 11:33:34 "},"tools/hexo.html":{"url":"tools/hexo.html","title":"Hexo简介","keywords":"","body":"Hexo简介 Hexo是一款使用node.js开发的静态网站构建工具，便于构建华丽绚烂的页面。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-05 11:37:04 "},"tools/hugo.html":{"url":"tools/hugo.html","title":"Hugo简介","keywords":"","body":"Hugo简介 Hugo是由Steve Francis基于Go语言开发的静态网站构建工具。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-06 10:41:45 "},"hugo/why-hugo.html":{"url":"hugo/why-hugo.html","title":"使用Hugo进行网站构建","keywords":"","body":"为何使用Hugo进行网站构建 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-07 17:17:09 "},"hugo/get-familar-with-git-and-github.html":{"url":"hugo/get-familar-with-git-and-github.html","title":"熟悉Git和GitHub","keywords":"","body":"熟悉Git和GitHub 我们使用Git和GitHub来管理和托管网站代码，因此对于没有Git使用经验的人来说，有必要先简单的熟悉下Git和GitHub。 Git常用命令 git init：初始化本地代码仓库； git remote add origin ：将本地目录链接到远程服务器的代码仓库，这样所有的更改都可以提交的远程仓库； Git status：列出所有已添加的文件/目录，或者是被修改和需要提交的文件/目录； Git add * 或者git add ：添加文件/目录才能追踪本地文件，才可以被提交 git commit -m \"提交信息\"：此命令可帮助您在本地计算机中提交跟踪的更改，并生成可识别更新代码的提交ID Git commit -am \"提交信息\"：和上个命令唯一的不同就是，在将所有的文件添加到预演（stage）中后，该命令会根据操作系统打开一个默认的文本编辑器，例如Ubuntu使用Vim，Windows中使用Notepad++来提交这些信息。 git push origin master：将最后一次提交的代码推送到远程代码仓库 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-20 14:33:38 "},"hugo/install-hugo.html":{"url":"hugo/install-hugo.html","title":"安装Hugo","keywords":"","body":"安装hugo Hugo的安装十分简单，安装时不需要安装任何依赖软件，其本身只是一个二进制文件，可以使用以下几种方式安装： 直接使用二进制文件安装 到Hugo release下载对应系统的安装包，解压后放到$PATH目录下即可使用 使用go get安装 这种安装方式的前提是您的电脑上已经配置了Go开发环境，为了简单起见，建议直接下载贬义好的发型版安装。 go get -u -v github.com/gohugoio/hugo 详细方式请参考：https://github.com/gohugoio/hugo Brew安装 如果您是Mac用户，可以使用brew命令来安装。 brew install hugo 注意：这种安装方式安装的往往不是最新版本的hugo，如果要使用最新版的hugo，请使用前两种方式安装。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2018-01-08 14:05:40 "},"hugo/template-introduction.html":{"url":"hugo/template-introduction.html","title":"Template说明","keywords":"","body":"Template说明 Hugo中包括两种类型的template：single template和list template。 参考 Go html template Hugo template Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-25 14:10:01 "},"steps/":{"url":"steps/","title":"网站构建流程详解","keywords":"","body":"网站构建流程详解 教你从零开始一步步使用Hugo构建静态网站，内容详略得当，图文并茂。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-17 22:17:39 "},"steps/create-github-pages.html":{"url":"steps/create-github-pages.html","title":"创建GitHub Pages","keywords":"","body":"创建GitHub Pages 任何人都可以申请GitHub，并开通GItHub Pages，这都是免费的。 假如您的GitHub帐号为alice，则需要创建一个这样的GitHub repo作为您的GitHub Pages托管仓库：alice.github.io，只有这样的仓库名称才可以作为您的GitHub Pages的入口页面，而其他的GitHub Pages则是在该页面的子级URL下，如http://alice.github.io/blog、http://alice.github.io/project等。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-24 22:07:57 "},"steps/domain-name-apply.html":{"url":"steps/domain-name-apply.html","title":"申请域名","keywords":"","body":"申请域名 通过国外的渠道申请的域名不需要备案，将会为你的网站构建省去很多麻烦，但是也要注意遵守国家法律。 namecheap godaddy Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-24 21:49:40 "},"steps/dns-setup.html":{"url":"steps/dns-setup.html","title":"配置DNS解析","keywords":"","body":"配置DNS解析 为了让用户访问域名能够解析到我们申请的GitHub Pages上，需要为GitHub Pages设置CNAME，同时再将我们申请的域名解析到GitHub Pages上。 设置CNAME 在GitHub Pages的项目根目录下创建一个名为CNAME的文件。 文件中的内容为你申请的域名，如 jimmysong.io 配置DNS 在Cloudflare上配置DNS解析。 配置如下图所示，最后一行是自动生成的。 图片 - Cloudflare页面 这样实际上将用户访问https://jimmysong.io跳转到Github Pages的域名，但是用户看到的仍然是https://jimmysong.io的域名。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-24 21:49:50 "},"steps/env-setup.html":{"url":"steps/env-setup.html","title":"网站构建环境配置","keywords":"","body":"网站构建环境配置 我们的网站会用到以下组件： Hugo：用于静态html生成和进行内容管理 Cloudinary：用于托管图片和静态文件 GitHub：用于存储网站代码同时托管网站 Algolia：用于站内搜索 CloudFlare：用于DNS解析和CDN加速 使用stacks-cli命令行工具可用于分析任何网站的技术栈，Chrome浏览器也提供了这样的工具Wappalyzer。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-24 22:06:15 "},"steps/themes.html":{"url":"steps/themes.html","title":"主题选择与调试","keywords":"","body":"主题选择与调试 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-03 18:58:27 "},"steps/static-file-storage.html":{"url":"steps/static-file-storage.html","title":"静态文件存储","keywords":"","body":"静态文件存储 我推荐将静态文件跟网站的代码、主题、主体文件分开存储，这样的好处是： 可以使用CDN加快静态文件的访问速度 单独管理静态文件，方便重复应用 可以使用其他工具对静态文件的使用和流量进行控制 云存储 我推荐使用如下两种云存储： 七牛云：https://www.qiniu.com Cloudinary: https://www.cloudinary.com 我将分别介绍两种云储存服务，及其各自的优缺点。 七牛云存储 七牛云是中国知名的云存储公司，提供对象存储、CDN和PaaS平台等企业级服务。 七牛云存储提供了免费CDN配额：存储空间10GB，每月下载流量10GB，每月PUT/DELETE 10万次请求，每月GET 100万次请求。月流量在10GB以下的网站基本上可以一直免费使用七牛云存储CDN服务。 图片 - 七牛云对象存储页面 七牛云可以通过API也可以直接通过Web上传文件和对文件进行简单的管理。 图片 - 七牛云存储文件管理页面 Cloudinary Cloudinary的免费套餐如下： 20,000 + 7,500 Extra Monthly Transformations 300,000 + 300,000 Extra Total Images 10 GB + 3 GB Extra Managed Storage 20 GB + 6 GB Extra Monthly Viewing Bandwidth Extra的资源是通过facebook和Twitter给他们分享后获得的，这些免费资源基本可以满足一个普通博客的需求。 下图是媒体库，可以选择图片、音视频、文件、中断队列来对整个媒体库的内容进行分类。 图片 - Cloudniary媒体库 点击单张图片进入详情页面，可以分别对每张图片进行操作，例如裁剪、增加水印、缩略图等。 图片 - 图片详情页面 对比 下面将从以下几个方面对两种云存储进行对比，供大家参考。 云储存 七牛云 Cloudinary 易用性 适应国内用户的操作习惯，提供命令行工具和众多的开源工具支持 纯英文界面，web操作不够友好，页面在国内访问比较慢，但是提供了多种语言的API支持，很多国外的博客管理软件默认使用的云存储，支持文件访问次数和访问来源等多种统计功能 免费额度 10G存储，每月10G流量 13G存储、月26G流量、30万张图片、月27,500张图片转换 https支持 需要自行设置证书，默认不支持，https流量需要单独计费，不提供免费https流量 默认支持https，不区分https和http流量 访问速度 国内用户访问速度极快 访问速度很快，完全满足要求 文件操作 没有文件的历史版本信息 保留文件的历史版本，提供免费的图片转换额度 因为cloudinary保存的文件默认支持https并且月流量为26G，远远大于七牛云，并且提供很很友好的图片引用和调用统计功能，因此我将原来在七牛云中的存储的文件迁移到了cloudinary中。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-17 22:43:54 "},"steps/web-analytics-plugin.html":{"url":"steps/web-analytics-plugin.html","title":"网站统计工具","keywords":"","body":"网站统计工具 百度统计 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-03 18:58:12 "},"steps/searching-plugin.html":{"url":"steps/searching-plugin.html","title":"站内搜索插件","keywords":"","body":"站内搜索插件 algolia Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-03 18:57:55 "},"steps/comment-plugin.html":{"url":"steps/comment-plugin.html","title":"网站评论插件","keywords":"","body":"Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-10-25 14:20:11 "},"steps/social-share-plugin.html":{"url":"steps/social-share-plugin.html","title":"社交化分享工具","keywords":"","body":"社交化分享工具 addthis jiathis ishare Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-07 17:26:27 "},"steps/security.html":{"url":"steps/security.html","title":"网站安全性","keywords":"","body":"网站安全性 当我的网站 https://jimmysong.io 没有开启 https 的时候，打开网站经常能看到各种莫名其妙的广告。实在受不了无耻的运营商劫持，如下图： 图片 - 运营商劫持 总是在我的网站页面上植入广告，尤其是在微信中打开我的网站链接然后选择在浏览器中打开的时候，最近总是植入广告，迫不得已我要开启https。 因为是用的是 Github Page，启用了自定义域名就无法再在Github中配置开启https，只能自己另想办法。 参考这篇文章 ➡️ 开启 Github Pages 自定义域名 HTTPS 和 HTTP/2 支持 &#x1F44F;&#x1F44F; 开启https步骤说明 这一切都是免费的，只需要以下几个步骤： 在 cloudflare 注册，经过一系列对你的网站自动检测后，获得新的 nameserver 地址； 和我的域名注册机构 namecheap 配置一下，修改 nameservers 记录为刚才在 cloudflare 上获得的 nameserver 地址； 在 Cloudflare 上配置 Page Rules：加入一条规则 http://jimmysong.io/* 设置为 Always Use HTTPS 修改网站代码中的 css 和 js 文件地址为 https； 等几分钟访问网站 http://jimmysong.io 后就会跳转为 https://jimmysong.io 。 遗留问题 该过程中主要遇到下面两个问题： 需要在网站代码中名为指定 css 和 js 文件的路径要包含域名，使用相对路径的话仍然会以 http 的形式加载，将导致网站无法加载样式； 第一次使用 https://jimmysong.io 访问的时候可能会提示证书问题，一旦选择信任后在后续访问的过程中就不会再提示。 因为图片保存在七牛云中，没有使用证书，访问包括图片的网址后会自动变回 http，考虑今后将图片直接放到 GitHub 中存储。 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-20 18:43:38 "},"steps/website-performence-optimization.html":{"url":"steps/website-performence-optimization.html","title":"网站性能优化","keywords":"","body":"网站性能优化 对于静态网站，主要可以优化的地方就是网站的加载速度。 了解你的网站性能 查看世界各地访问该网站的速度。 使用ping.pe，ping jimmysong.io的效果如图： 图片 - jimmysong.io 另外还可以使用Grafana的插件，并安装worldping插件，效果如下图所示： 图片 - Grafana中监控的jimmysong.io Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-12 19:18:21 "},"steps/seo.html":{"url":"steps/seo.html","title":"搜索引擎优化（SEO）","keywords":"","body":"搜索引擎优化（SEO） 搜索引擎优化简称SEO（Search Engine Optimizing）。 在您的网站上线后，做SEO时需要检查如下内容： 集成Google Analytics或百度统计 为页面增加header信息，如title和description sitemap.xml，大多数网站生成工具都会自动生成站点地图，生成之后将其URL提交的Google Webmaster Tools。 robots.txt，阻止搜索引擎爬取网站上的敏感网页 结构化数据：可以帮助爬虫理解页面内容，参考HTML5的结构化数据 检测破损URL 使用Google webmaster可以检测网站的破损URL，如下图所示： 图片 - Google webmaster页面 Hugo SEO 下面是对使用 Hugo 生成静态网页的 SEO 优化建议。 页面关键词 为每篇博文设置关键词： --- keywords: - mysite - mysite keyword - Another useful keyword title: My Homepage --- 需要在文章模板的 header 的 中添加关键词字段。 页面标题 同样，每篇文章都要有一个标题，这样方便搜索引擎收录，Hugo 生成的文章一般都会在文章的头部增加该字段，同时文章模板的 header 中也需要有 标签。 {{ $isHomePage := eq .Title .Site.Title }}{{ .Title }}{{ if eq $isHomePage false }} - {{ .Site.Title }}{{ end }} 也可以在 meta 中添加标题标签。 页面描述 在 hugo 的网站配置文件 config.toml 中设置网站的配置信息，这将显示在浏览器的标签上，该设置是 hugo 内置的。 [params] description = \"Site stuff for being a good site with internet tubez.\" 同时也可以为每篇文章设置描述信息，这个 description 是十分有用的，当你通过各种社交软件分享页面的时候会解析该字段，同时显示页面的描述信息。 --- keywords: - mysite - mysite keyword - Another useful keyword title: My Homepage description: Where you should come to find my homepage updates and stuff --- 同样是在模板的 header 中的加入标签。 要时刻牢记 SEO 的观念，你的文章是你对外的最好展示窗口，当你将文章的信息格式化话后，还可以对自己发表的文章进行统计分析。 下面是SEO checklist供大家参考： 图片 - SEO checklist 参考 Front-End-Checklist - Github SEO 查询 - 站长之家 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-12-02 17:32:48 "},"theme/beautifulhugo-overview.html":{"url":"theme/beautifulhugo-overview.html","title":"BeautifulHugo主题使用说明","keywords":"","body":"BeautifulHugo主题使用说明 Copyright © jimmysong.io 2017 all right reserved，powered by GitbookUpdated: 2017-11-07 17:18:46 "}}